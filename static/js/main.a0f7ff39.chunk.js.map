{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","writeTitle","goods","lastGood","length","join","addGood","good","setState","removeGood","filter","currentGood","this","className","cn","type","onClick","map","key","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAKMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAiFaC,E,4MA7EbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACD,GACZ,IAAME,EAAK,YAAOF,GACZG,EAAWD,EAAMA,EAAME,OAAS,GAEtC,OAAQF,EAAME,QACZ,KAAK,EACH,MAAM,oBACR,KAAK,EACH,MAAM,GAAN,OAAUF,EAAM,GAAhB,gBACF,QAGE,OAFAA,EAAME,QAAU,EAEV,GAAN,OAAUF,EAAMG,KAAK,MAArB,gBAAkCF,EAAlC,mB,EAING,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAT,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BO,S,EAI5CE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAAAT,GAAK,MAAK,CACtBC,cAAeD,EACZC,cACAU,QAAO,SAAAC,GAAW,OAAIA,IAAgBJ,U,4CAI7C,WAAU,IAAD,OACCP,EAAkBY,KAAKb,MAAvBC,cAER,OACE,yBAAKa,UAAU,OACb,4BACE,4BACEA,UAAWC,IAAG,CAAE,eAAgBd,EAAcI,SAC9CW,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAER,cAAe,OAJnC,KASCY,KAAKX,WAAWD,IAEnB,4BACGH,EAAgBoB,KAAI,SAAAV,GAAI,OACvB,wBAAIW,IAAKX,GACP,4BACEQ,KAAK,SACLC,QAAS,kBACPhB,EAAcmB,SAASZ,GACnB,EAAKE,WAAWF,GAChB,EAAKD,QAAQC,KAGlBP,EAAcmB,SAASZ,GAAQ,SAAW,OAG7C,8BACG,IACAA,a,GApECa,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a0f7ff39.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  writeTitle = (selectedGoods) => {\n    const goods = [...selectedGoods];\n    const lastGood = goods[goods.length - 1];\n\n    switch (goods.length) {\n      case 0:\n        return `No goods selected`;\n      case 1:\n        return `${goods[0]} is selected`;\n      default:\n        goods.length -= 1;\n\n        return `${goods.join(', ')} and ${lastGood} are selected`;\n    }\n  }\n\n  addGood = (good) => {\n    this.setState(state => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  }\n\n  removeGood = (good) => {\n    this.setState(state => ({\n      selectedGoods: state\n        .selectedGoods\n        .filter(currentGood => currentGood !== good),\n    }));\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          <button\n            className={cn({ 'show-button': !selectedGoods.length })}\n            type=\"button\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            x\n          </button>\n          {this.writeTitle(selectedGoods)}\n        </h1>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              <button\n                type=\"button\"\n                onClick={() => (\n                  selectedGoods.includes(good)\n                    ? this.removeGood(good)\n                    : this.addGood(good)\n                )}\n              >\n                {selectedGoods.includes(good) ? 'remove' : 'add'}\n              </button>\n\n              <span>\n                {' '}\n                {good}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}